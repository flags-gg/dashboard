version: "3"
vars:
  SERVICE_NAME: dashboard
  NAMESPACE: flags-gg
tasks:
  make-temp-files:
    cmds:
      - task: get-latest-tag
      - task: get-commit-hash
  get-latest-tag:
    cmds:
      - |
        git fetch --tags
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
        if [[ -z "$latest_tag" ]]; then
          echo "0.0.1" > .latest_tag
        else
          echo $latest_tag | awk -F. '{printf "%d.%d.%d", $1, $2, $3}' > .latest_tag
        fi
    silent: true
  get-commit-hash:
    cmd: git rev-parse --short HEAD > .commit_hash
    silent: true
  clean-git-file:
    cmds:
      - rm .latest_tag
      - rm .commit_hash
  test:
    cmd: npm test

  # Publish Commands
  publish-images:
    cmds:
      - task: get-commit-hash
        vars:
          COMMIT_HASH:
            sh: cat .commit_hash
      - nerdctl push containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:{{.COMMIT_HASH}} --all-platforms
      - nerdctl push containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:latest --all-platforms
    vars:
      COMMIT_HASH:
        sh: cat .commit_hash

  # Build Commands
  build-images:
    cmds:
      - task: get-latest-tag
      - task: get-commit-hash
      - |
        nerdctl build \
          --platform=amd64,arm64 \
          --tag containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:{{.COMMIT_HASH}} \
          --build-arg GIT_VERSION={{.LATEST_TAG}} \
          --build-arg GIT_BUILD={{.COMMIT_HASH}} \
          --build-arg SERVICE_NAME={{.SERVICE_NAME}} \
          --build-arg KEYCLOAK_ISSUER={{.KEYCLOAK_ISSUER}} \
          --build-arg KEYCLOAK_SECRET={{.KEYCLOAK_SECRET}} \
          --build-arg KEYCLOAK_ID={{.KEYCLOAK_ID}} \
          --build-arg FLAGS_SERVER="https://api.flags.gg/v1" \
          --build-arg FLAGS_PROJECT_ID=b0c5020e-760e-4156-a88b-344fb725a9b7 \
          --build-arg FLAGS_DASHBOARD_ID=c778cf4b-83f1-4c53-951e-604102c84898 \
          --build-arg FLAGS_DASHBOARD_ENVIRONMENT_ID=81aca98e-3b01-4c3c-a4cf-c7eee26185c5 \
          --build-arg NEXT_PUBLIC_FLAGS_SERVER=https://api.flags.gg/v1 \
          --build-arg NEXTAUTH_URL=http://localhost:3000 \
          --build-arg NEXTAUTH_SECRET={{.NEXTAUTH_SECRET}} \
          --build-arg UPLOADTHING_TOKEN={{.UPLOADTHING_TOKEN}} \
          --build-arg STRIPE_KEY={{.STRIPE_KEY}} \
          --build-arg STRIPE_SECRET={{.STRIPE_SECRET}} \
          -f ./k8s/Containerfile .
      - nerdctl tag containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:{{.COMMIT_HASH}} containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:latest
    vars:
      LATEST_TAG:
        sh: cat .latest_tag
      COMMIT_HASH:
        sh: cat .commit_hash
      KEYCLOAK_SECRET:
        sh: jq -r .KEYCLOAK_SECRET secrets_file.json
      KEYCLOAK_ISSUER: https://keys.chewedfeed.com/realms/flags-gg
      KEYCLOAK_ID: dashboard
      STRIPE_KEY:
        sh: jq -r .STRIPE_KEY secrets_file.json
      STRIPE_SECRET:
        sh: jq -r .STRIPE_SECRET secrets_file.json
      UPLOADTHING_TOKEN:
        sh: jq -r .UPLOADTHING_TOKEN secrets_file.json
      NEXTAUTH_SECRET:
        sh: jq -r .NEXTAUTH_SECRET secrets_file.json
      NEXTAUTH_URL:
        sh: jq -r .NEXTAUTH_URL secrets_file.json
      FLAGS_DASHBOARD_ENVIRONMENT_ID:
        sh: jq -r .FLAGS_DASHBOARD_ENVIRONMENT_ID secrets_file.json

  build-push-latest:
    cmds:
      - task: get-latest-tag
      - task: get-commit-hash
      - nerdctl build --platform=amd64,arm64 --tag containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:latest --build-arg VERSION={{.LATEST_TAG}} --build-arg BUILD={{.COMMIT_HASH}} --build-arg SERVICE_NAME={{.SERVICE_NAME}} --build-arg KEYCLOAK_SECRET={{.KEYCLOAK_SECRET}} -f ./k8s/Containerfile .
      - nerdctl push containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:latest --all-platforms
    vars:
      LATEST_TAG:
        sh: cat .latest_tag
      COMMIT_HASH:
        sh: cat .commit_hash
      KEYCLOAK_SECRET:
        sh: jq -r .KEYCLOAK_SECRET secrets_file.json

  build-test-images:
    cmds:
      - task: get-latest-tag
      - task: get-commit-hash
      - |
        docker build \
          --tag containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:tester \
          --build-arg GIT_VERSION={{.LATEST_TAG}} \
          --build-arg GIT_BUILD={{.COMMIT_HASH}} \
          --build-arg SERVICE_NAME={{.SERVICE_NAME}} \
          --build-arg KEYCLOAK_ISSUER={{.KEYCLOAK_ISSUER}} \
          --build-arg KEYCLOAK_SECRET={{.KEYCLOAK_SECRET}} \
          --build-arg KEYCLOAK_ID={{.KEYCLOAK_ID}} \
          --build-arg FLAGS_SERVER="https://api.flags.gg/v1" \
          --build-arg FLAGS_PROJECT_ID=b0c5020e-760e-4156-a88b-344fb725a9b7 \
          --build-arg FLAGS_DASHBOARD_ID=c778cf4b-83f1-4c53-951e-604102c84898 \
          --build-arg FLAGS_DASHBOARD_ENVIRONMENT_ID=81aca98e-3b01-4c3c-a4cf-c7eee26185c5 \
          --build-arg NEXT_PUBLIC_FLAGS_SERVER=https://api.flags.gg/v1 \
          --build-arg NEXTAUTH_URL=http://172.17.0.2:3000 \
          --build-arg NEXTAUTH_URL_INTERNAL=http://172.17.0.2:3000 \
          --build-arg NEXTAUTH_SECRET={{.NEXTAUTH_SECRET}} \
          --build-arg UPLOADTHING_TOKEN={{.UPLOADTHING_TOKEN}} \
          --build-arg STRIPE_KEY={{.STRIPE_KEY}} \
          --build-arg STRIPE_SECRET={{.STRIPE_SECRET}} \
          -f ./k8s/Containerfile .
    vars:
      LATEST_TAG:
        sh: cat .latest_tag
      COMMIT_HASH:
        sh: cat .commit_hash
      KEYCLOAK_SECRET:
        sh: jq -r .KEYCLOAK_SECRET secrets_file.json
      KEYCLOAK_ISSUER: https://keys.chewedfeed.com/realms/flags-gg
      KEYCLOAK_ID: dashboard
      STRIPE_KEY:
        sh: jq -r .STRIPE_KEY secrets_file.json
      STRIPE_SECRET:
        sh: jq -r .STRIPE_SECRET secrets_file.json
      UPLOADTHING_TOKEN:
        sh: jq -r .UPLOADTHING_TOKEN secrets_file.json
      NEXTAUTH_SECRET:
        sh: jq -r .NEXTAUTH_SECRET secrets_file.json
      NEXTAUTH_URL:
        sh: jq -r .NEXTAUTH_URL secrets_file.json
      FLAGS_DASHBOARD_ENVIRONMENT_ID:
        sh: jq -r .FLAGS_DASHBOARD_ENVIRONMENT_ID secrets_file.json

  build:
    cmds:
      - task: build-images

  # Deploy Commands
  deploy:
    cmd: kubectl set image deployment/{{.SERVICE_NAME}} {{.SERVICE_NAME}}=containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:{{.COMMIT_HASH}} -n {{.NAMESPACE}}
    vars:
      COMMIT_HASH:
        sh: cat .commit_hash
  deploy-latest:
    cmds:
      - kubectl set image deployment/{{.SERVICE_NAME}} {{.SERVICE_NAME}}=containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:latest -n {{.NAMESPACE}}
      - kubectl rollout restart deployment/{{.SERVICE_NAME}} -n {{.NAMESPACE}}
  deploy-latest-tag:
    cmds:
      - kubectl set image deployment/{{.SERVICE_NAME}} {{.SERVICE_NAME}}=containers.chewed-k8s.net/{{.NAMESPACE}}/{{.SERVICE_NAME}}:{{.LATEST_TAG}} -n {{.NAMESPACE}}
      - kubectl rollout restart deployment/{{.SERVICE_NAME}} -n {{.NAMESPACE}}
    vars:
      LATEST_TAG:
        sh: cat .latest_tag

  # Extras
  build-deploy:
    cmds:
      - task: build-images
      - task: publish-images
      - task: deploy
  build-publish:
    cmds:
      - task: get-latest-tag
      - task: build-images
      - task: publish-images
  build-deploy-latest:
    cmds:
      - task: build-push-latest
      - task: deploy-latest

  run-image:
    cmds:
      - docker image prune -f
      - docker container prune -f
      - docker run --rm -it --name tester containers.chewed-k8s.net/flags-gg/dashboard:tester
  build-run-test:
    cmds:
      - task: build-test-images
      - task: run-image
